@page
@using System;
@model OnlineNet.WebApp.Pages.Shop.IndexModel
@{ViewData["Title"] = "Shop";
}

<h1 class="mb-4">Storefront</h1>

@if (!string.IsNullOrWhiteSpace(Model.SuccessMessage))
{
    <div class="alert alert-success">@Model.SuccessMessage</div>
}

<div class="row g-4">
    <div class="col-lg-4">
        <section class="card h-100">
            <div class="card-body">
                <h2 class="h5">1. Choose a customer</h2>

                @if (Model.Customers.Count == 0)
                {
                    <div class="alert alert-info mb-0">No customers available yet.</div>
                }
                else
                {
                    <form method="get" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label asp-for="CustomerId" class="form-label">Customer</label>
                            <select asp-for="CustomerId" asp-items="Model.CustomerItems" class="form-select">
                                <option value="">-- Select a customer --</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-outline-primary w-100">Load customer context</button>
                    </form>
                }
            </div>
        </section>

        <section class="card mt-4">
            <div class="card-body">
                <h2 class="h5">2. Place an order</h2>

                @if (Model.Customers.Count == 0)
                {
                    <div class="alert alert-info mb-0">Add a customer before placing orders.</div>
                }
                else if (Model.Products.Count == 0)
                {
                    <div class="alert alert-warning mb-0">No active products in stock.</div>
                }
                else if (!(Model.CustomerId is { } selectedCustomer) || selectedCustomer == Guid.Empty)
                {
                    <div class="alert alert-info mb-0">Select a customer to continue.</div>
                }
                else
                {
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="mb-3">
                            <label asp-for="Input.ProductId" class="form-label"></label>
                            <select asp-for="Input.ProductId" asp-items="Model.ProductItems" class="form-select">
                                <option value="">-- Select a product --</option>
                            </select>
                            <span class="text-danger" asp-validation-for="Input.ProductId"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Input.Quantity" class="form-label"></label>
                            <input asp-for="Input.Quantity" class="form-control" min="1" />
                            <span class="text-danger" asp-validation-for="Input.Quantity"></span>
                        </div>
                        <input type="hidden" asp-for="Input.CustomerId" />
                        <button type="submit" class="btn btn-primary w-100">Place order</button>
                    </form>
                }
            </div>
        </section>
    </div>

    <div class="col-lg-8">
        <section class="card mb-4">
            <div class="card-body">
                <h2 class="h5">3. Basket overview</h2>

                @if (!(Model.CustomerId is { } selectedCustomerId) || selectedCustomerId == Guid.Empty)
                {
                    <div class="alert alert-light mb-0">Select a customer to view their basket.</div>
                }
                else if (Model.Basket is null || !Model.Basket.HasItems)
                {
                    <div class="alert alert-info mb-0">The basket is currently empty.</div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped mb-0">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th class="text-end">Price</th>
                                    <th class="text-end">Quantity</th>
                                    <th class="text-end">Subtotal</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Basket.Items)
                                {
                                    <tr>
                                        <td>@item.ProductName</td>
                                        <td class="text-end">@item.UnitPrice.ToString("N2") @item.Currency</td>
                                        <td class="text-end">@item.Quantity</td>
                                        <td class="text-end">@item.Subtotal.ToString("N2") @item.Currency</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="3" class="text-end">Total</th>
                                    <th class="text-end">@Model.Basket.Total.ToString("N2") @Model.Basket.Currency</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
            </div>
        </section>

        <section class="card">
            <div class="card-body">
                <h2 class="h5">4. Recent orders</h2>

                @if (!(Model.CustomerId is { } customerIdForOrders) || customerIdForOrders == Guid.Empty)
                {
                    <div class="alert alert-light mb-0">Select a customer to view recent orders.</div>
                }
                else if (Model.Orders.Count == 0)
                {
                    <div class="alert alert-info mb-0">No orders placed yet.</div>
                }
                else
                {
                    @foreach (var order in Model.Orders)
                    {
                        <div class="border rounded-3 mb-3">
                            <div class="bg-light border-bottom px-3 py-2 d-flex justify-content-between align-items-center">
                                <span>
                                    <strong>Order #@order.Id.ToString()[..8]</strong>
                                    placed @order.CreatedOn.ToLocalTime().ToString("g")
                                </span>
                                <span class="badge bg-secondary">@order.Status</span>
                            </div>
                            <div class="px-3 py-3">
                                <p class="mb-2"><strong>Total:</strong> @order.TotalAmount.ToString("N2") @order.Currency</p>
                                <div class="table-responsive">
                                    <table class="table table-sm align-middle mb-0">
                                        <thead>
                                            <tr>
                                                <th>Product</th>
                                                <th class="text-end">Quantity</th>
                                                <th class="text-end">Unit price</th>
                                                <th class="text-end">Subtotal</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var line in order.Lines)
                                            {
                                                <tr>
                                                    <td>@line.ProductName</td>
                                                    <td class="text-end">@line.Quantity</td>
                                                    <td class="text-end">@line.UnitPrice.ToString("N2") @line.Currency</td>
                                                    <td class="text-end">@line.Subtotal.ToString("N2") @line.Currency</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
